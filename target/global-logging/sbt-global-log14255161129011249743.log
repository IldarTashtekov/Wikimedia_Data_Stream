[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\34695\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\34695\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.2 (Amazon.com Inc. Java 11.0.13)
[debug]       Load.loadUnit: plugins took 163.7612ms
[debug]       Load.loadUnit: defsScala took 0.4729ms
[debug] [Loading] Scanning directory C:\Users\34695\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\34695\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 32.2084 ms
[debug]           Load.resolveProject(global-plugins) took 73.1705ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\34695\.sbt\1.0\plugins, plugins: List(<none>))) took 147.118ms
[debug] [Loading] Done in C:\Users\34695\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 183.2167ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3067ms
[debug]     Load.loadUnit(file:/C:/Users/34695/.sbt/1.0/plugins/, ...) took 363.1646ms
[debug]   Load.apply: load took 598.2778ms
[debug]   Load.apply: resolveProjects took 8.771ms
[debug]   Load.apply: finalTransforms took 86.058ms
[debug]   Load.apply: config.delegates took 12.4974ms
[debug]   Load.apply: Def.make(settings)... took 652.5456ms
[debug]   Load.apply: structureIndex took 171.0993ms
[debug]   Load.apply: mkStreams took 2.8116ms
[info] loading global plugins from C:\Users\34695\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3916.4964ms
[debug]           Load.loadUnit: plugins took 51.3079ms
[debug]           Load.loadUnit: defsScala took 0.0075ms
[debug] [Loading] Scanning directory C:\Users\34695\Documents\JavaProjects\Wikimedia_Streaming_Project\project
[debug]             Load.loadUnit: mkEval took 12.6968ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\34695\Documents\JavaProjects\Wikimedia_Streaming_Project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.0859 ms
[info] loading settings for project wikimedia_streaming_project-build from idea.sbt ...
[debug]               Load.resolveProject(wikimedia_streaming_project-build) took 5.1869ms
[debug]             Load.loadTransitive: finalizeProject(Project(id wikimedia_streaming_project-build, base: C:\Users\34695\Documents\JavaProjects\Wikimedia_Streaming_Project\project, plugins: List(<none>))) took 9.3041ms
[debug] [Loading] Done in C:\Users\34695\Documents\JavaProjects\Wikimedia_Streaming_Project\project, returning: (wikimedia_streaming_project-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 222.6613ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.9399ms
[debug]         Load.loadUnit(file:/C:/Users/34695/Documents/JavaProjects/Wikimedia_Streaming_Project/project/, ...) took 281.9799ms
[debug]       Load.apply: load took 284.603ms
[debug]       Load.apply: resolveProjects took 0.1542ms
[debug]       Load.apply: finalTransforms took 12.6121ms
[debug]       Load.apply: config.delegates took 0.578ms
[debug]       Load.apply: Def.make(settings)... took 137.1306ms
[debug]       Load.apply: structureIndex took 45.8408ms
[debug]       Load.apply: mkStreams took 0.004ms
[info] loading project definition from C:\Users\34695\Documents\JavaProjects\Wikimedia_Streaming_Project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 993.8774ms
[debug]     Load.loadUnit: defsScala took 0.0091ms
[debug] [Loading] Scanning directory C:\Users\34695\Documents\JavaProjects\Wikimedia_Streaming_Project
[debug]       Load.loadUnit: mkEval took 0.8025ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\34695\Documents\JavaProjects\Wikimedia_Streaming_Project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.3464 ms
[info] loading settings for project wikimedia_streaming_project from build.sbt ...
[debug]         Load.resolveProject(wikimedia_streaming_project) took 45.3717ms
[debug]       Load.loadTransitive: finalizeProject(Project(id wikimedia_streaming_project, base: C:\Users\34695\Documents\JavaProjects\Wikimedia_Streaming_Project, plugins: List(<none>))) took 50.6632ms
[debug] [Loading] Done in C:\Users\34695\Documents\JavaProjects\Wikimedia_Streaming_Project, returning: (wikimedia_streaming_project)
[debug]     Load.loadUnit: loadedProjectsRaw took 217.4081ms
[debug]     Load.loadUnit: cleanEvalClasses took 9.1608ms
[debug]   Load.loadUnit(file:/C:/Users/34695/Documents/JavaProjects/Wikimedia_Streaming_Project/, ...) took 1221.5442ms
[debug] Load.apply: load took 1224.5078ms
[debug] Load.apply: resolveProjects took 0.274ms
[debug] Load.apply: finalTransforms took 45.4607ms
[debug] Load.apply: config.delegates took 0.4034ms
[debug] Load.apply: Def.make(settings)... took 111.2859ms
[debug] Load.apply: structureIndex took 39.5938ms
[debug] Load.apply: mkStreams took 0.0033ms
[info] set current project to Wikimedia_Streaming_Project (in build file:/C:/Users/34695/Documents/JavaProjects/Wikimedia_Streaming_Project/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 1309 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 1309, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Wikimedia_Streaming_Project (in build file:/C:/Users/34695/Documents/JavaProjects/Wikimedia_Streaming_Project/)
[debug] > Exec(idea-shell, None, None)
