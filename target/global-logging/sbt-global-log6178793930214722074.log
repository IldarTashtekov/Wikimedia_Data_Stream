[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\34695\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\34695\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.2 (Amazon.com Inc. Java 11.0.13)
[debug]       Load.loadUnit: plugins took 846.2716ms
[debug]       Load.loadUnit: defsScala took 0.9006ms
[debug] [Loading] Scanning directory C:\Users\34695\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\34695\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 103.0343 ms
[debug]           Load.resolveProject(global-plugins) took 289.0631ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\34695\.sbt\1.0\plugins, plugins: List(<none>))) took 611.053ms
[debug] [Loading] Done in C:\Users\34695\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 788.5399ms
[debug]       Load.loadUnit: cleanEvalClasses took 4.8265ms
[debug]     Load.loadUnit(file:/C:/Users/34695/.sbt/1.0/plugins/, ...) took 1722.0497ms
[debug]   Load.apply: load took 4908.0121ms
[debug]   Load.apply: resolveProjects took 84.634ms
[debug]   Load.apply: finalTransforms took 367.3365ms
[debug]   Load.apply: config.delegates took 27.5844ms
[debug]   Load.apply: Def.make(settings)... took 6017.1085ms
[debug]   Load.apply: structureIndex took 892.0242ms
[debug]   Load.apply: mkStreams took 7.1477ms
[info] loading global plugins from C:\Users\34695\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 44306.0886ms
[debug]           Load.loadUnit: plugins took 170.2557ms
[debug]           Load.loadUnit: defsScala took 0.0069ms
[debug] [Loading] Scanning directory C:\Users\34695\Documents\JavaProjects\Wikimedia_Streaming_Project\project
[debug]             Load.loadUnit: mkEval took 44.4713ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\34695\Documents\JavaProjects\Wikimedia_Streaming_Project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 11.6492 ms
[info] loading settings for project wikimedia_streaming_project-build from idea.sbt ...
[debug]               Load.resolveProject(wikimedia_streaming_project-build) took 40.9726ms
[debug]             Load.loadTransitive: finalizeProject(Project(id wikimedia_streaming_project-build, base: C:\Users\34695\Documents\JavaProjects\Wikimedia_Streaming_Project\project, plugins: List(<none>))) took 56.1119ms
[debug] [Loading] Done in C:\Users\34695\Documents\JavaProjects\Wikimedia_Streaming_Project\project, returning: (wikimedia_streaming_project-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 12916.5522ms
[debug]           Load.loadUnit: cleanEvalClasses took 84.4195ms
[debug]         Load.loadUnit(file:/C:/Users/34695/Documents/JavaProjects/Wikimedia_Streaming_Project/project/, ...) took 13173.7286ms
[debug]       Load.apply: load took 13225.8069ms
[debug]       Load.apply: resolveProjects took 0.2278ms
[debug]       Load.apply: finalTransforms took 42.3986ms
[debug]       Load.apply: config.delegates took 1.6787ms
[debug]       Load.apply: Def.make(settings)... took 345.3422ms
[debug]       Load.apply: structureIndex took 115.5062ms
[debug]       Load.apply: mkStreams took 0.0057ms
[info] loading project definition from C:\Users\34695\Documents\JavaProjects\Wikimedia_Streaming_Project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 25140.8351ms
[debug]     Load.loadUnit: defsScala took 0.0164ms
[debug] [Loading] Scanning directory C:\Users\34695\Documents\JavaProjects\Wikimedia_Streaming_Project
[debug]       Load.loadUnit: mkEval took 2.6027ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\34695\Documents\JavaProjects\Wikimedia_Streaming_Project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 5.8623 ms
[info] loading settings for project wikimedia_streaming_project from build.sbt ...
[debug]         Load.resolveProject(wikimedia_streaming_project) took 282.7996ms
[debug]       Load.loadTransitive: finalizeProject(Project(id wikimedia_streaming_project, base: C:\Users\34695\Documents\JavaProjects\Wikimedia_Streaming_Project, plugins: List(<none>))) took 296.4483ms
[debug] [Loading] Done in C:\Users\34695\Documents\JavaProjects\Wikimedia_Streaming_Project, returning: (wikimedia_streaming_project)
[debug]     Load.loadUnit: loadedProjectsRaw took 11411.2362ms
[debug]     Load.loadUnit: cleanEvalClasses took 156.9197ms
[debug]   Load.loadUnit(file:/C:/Users/34695/Documents/JavaProjects/Wikimedia_Streaming_Project/, ...) took 36715.7325ms
[debug] Load.apply: load took 36721.7692ms
[debug] Load.apply: resolveProjects took 0.2819ms
[debug] Load.apply: finalTransforms took 233.7368ms
[debug] Load.apply: config.delegates took 0.7142ms
[debug] Load.apply: Def.make(settings)... took 543.0681ms
[debug] Load.apply: structureIndex took 180.1719ms
[debug] Load.apply: mkStreams took 0.0055ms
[info] set current project to Wikimedia_Streaming_Project (in build file:/C:/Users/34695/Documents/JavaProjects/Wikimedia_Streaming_Project/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 2601 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 2601, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Wikimedia_Streaming_Project (in build file:/C:/Users/34695/Documents/JavaProjects/Wikimedia_Streaming_Project/)
[debug] > Exec(idea-shell, None, None)
